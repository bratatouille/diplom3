# Generated by Django 5.2.1 on 2025-06-03 17:32

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('store', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryPC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('gaming', 'Для игр'), ('work', 'Для работы'), ('office', 'Для офиса'), ('design', 'Для дизайна'), ('study', 'Для учебы'), ('streaming', 'Для стриминга')], max_length=50, unique=True)),
                ('display_name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=200)),
                ('icon', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PCBuild',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='PCBuildComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='PrebuiltPC',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('level', models.CharField(choices=[('start', 'Начальный уровень'), ('pro', 'Оптимальный выбор'), ('ultra', 'Максимальная мощность')], max_length=10, verbose_name='Уровень')),
                ('level_color', models.CharField(default='blue-500', max_length=20, verbose_name='Цвет уровня')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Готовая сборка ПК',
                'verbose_name_plural': 'Готовые сборки ПК',
                'ordering': ['category', 'level', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PrebuiltPCComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1, verbose_name='Количество')),
            ],
            options={
                'verbose_name': 'Компонент готовой сборки',
                'verbose_name_plural': 'Компоненты готовых сборок',
            },
        ),
        migrations.CreateModel(
            name='SavedPCBuild',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('data', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='CompatibilityRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operator', models.CharField(choices=[('=', 'Равно'), ('!=', 'Не равно'), ('<', 'Меньше'), ('<=', 'Меньше или равно'), ('>', 'Больше'), ('>=', 'Больше или равно')], max_length=2)),
                ('error_message', models.CharField(max_length=255)),
                ('category1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compat_rules_1', to='store.category')),
                ('category2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compat_rules_2', to='store.category')),
                ('spec1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compat_rules_1', to='store.specification')),
                ('spec2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compat_rules_2', to='store.specification')),
            ],
        ),
        migrations.CreateModel(
            name='Computer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('level', models.CharField(choices=[('start', 'Начальный уровень'), ('pro', 'Оптимальный выбор'), ('ultra', 'Максимальная мощность')], max_length=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('processor', models.CharField(max_length=100)),
                ('graphics_card', models.CharField(max_length=100)),
                ('ram', models.CharField(max_length=50)),
                ('storage', models.CharField(max_length=50)),
                ('level_color', models.CharField(default='blue-500', max_length=20)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='computers', to='pcbuilder.categorypc')),
            ],
            options={
                'ordering': ['price'],
            },
        ),
    ]
