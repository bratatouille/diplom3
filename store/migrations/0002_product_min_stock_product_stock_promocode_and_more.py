# Generated by Django 5.2.1 on 2025-06-04 19:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('store', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='product',
            name='min_stock',
            field=models.PositiveIntegerField(default=0, help_text='Минимальное количество для предупреждения о заканчивающемся товаре', verbose_name='Минимальный остаток'),
        ),
        migrations.AddField(
            model_name='product',
            name='stock',
            field=models.PositiveIntegerField(default=0, help_text='Количество товара на складе', verbose_name='Количество на складе'),
        ),
        migrations.CreateModel(
            name='PromoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='Код промокода')),
                ('name', models.CharField(help_text='Внутреннее название для администратора', max_length=100, verbose_name='Название')),
                ('description', models.TextField(blank=True, help_text='Описание акции', verbose_name='Описание')),
                ('discount_type', models.CharField(choices=[('percent', 'Процент'), ('fixed', 'Фиксированная сумма')], default='percent', max_length=10, verbose_name='Тип скидки')),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Размер скидки')),
                ('min_order_amount', models.DecimalField(decimal_places=2, default=0, help_text='Минимальная сумма заказа для применения промокода', max_digits=10, verbose_name='Минимальная сумма заказа')),
                ('max_discount_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Максимальная сумма скидки (только для процентных скидок)', max_digits=10, null=True, verbose_name='Максимальная сумма скидки')),
                ('start_date', models.DateTimeField(verbose_name='Дата начала действия')),
                ('end_date', models.DateTimeField(verbose_name='Дата окончания действия')),
                ('usage_limit', models.PositiveIntegerField(blank=True, help_text='Общее количество использований промокода (оставьте пустым для неограниченного)', null=True, verbose_name='Лимит использований')),
                ('usage_limit_per_user', models.PositiveIntegerField(default=1, help_text='Сколько раз один пользователь может использовать промокод', verbose_name='Лимит на пользователя')),
                ('used_count', models.PositiveIntegerField(default=0, verbose_name='Количество использований')),
                ('status', models.CharField(choices=[('active', 'Активный'), ('inactive', 'Неактивный'), ('expired', 'Истек'), ('used_up', 'Исчерпан')], default='active', max_length=10, verbose_name='Статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('allowed_categories', models.ManyToManyField(blank=True, help_text='Категории товаров, к которым применяется промокод (оставьте пустым для всех)', related_name='promocodes', to='store.category')),
                ('allowed_users', models.ManyToManyField(blank=True, help_text='Пользователи, которые могут использовать этот промокод (оставьте пустым для всех)', related_name='allowed_promocodes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Промокод',
                'verbose_name_plural': 'Промокоды',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PromoCodeUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='ID заказа')),
                ('discount_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Размер скидки')),
                ('order_amount', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Сумма заказа')),
                ('used_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата использования')),
                ('promocode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='usages', to='store.promocode')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='promocode_usages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Использование промокода',
                'verbose_name_plural': 'История использования промокодов',
                'ordering': ['-used_at'],
            },
        ),
        migrations.CreateModel(
            name='UserPromoCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата назначения')),
                ('is_notified', models.BooleanField(default=False, verbose_name='Уведомлен')),
                ('assigned_by', models.ForeignKey(blank=True, help_text='Кто назначил промокод', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_promocodes', to=settings.AUTH_USER_MODEL)),
                ('promocode', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='store.promocode')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='personal_promocodes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Персональный промокод',
                'verbose_name_plural': 'Персональные промокоды',
                'unique_together': {('user', 'promocode')},
            },
        ),
    ]
